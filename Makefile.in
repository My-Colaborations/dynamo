# You may edit this makefile as long as you keep these original 
# target names defined.
MODE=debug
GNATMAKE=gprbuild
GNATCLEAN=gprclean
GPRINSTALL=@GPRINSTALL@
GPRPATH=dynamo.gpr

distdir=dynamo-@GEN_VERSION@

DIST_FILE=dynamo-@GEN_VERSION@.tar.gz

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
datarootdir= @datarootdir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@

top_builddir = .
config_dir=${datadir}/dynamo

CPUS := @NR_CPUS@
MAKE_ARGS=-XMODE=${MODE} -XPROCESSORS=$(CPUS)

MKDIR=mkdir
CP=cp

# Build executables for all mains defined by the project.
build:	local-build build-tests

local-build: src/gen-configs.ads
	$(GNATMAKE) -p -P "$(GPRPATH)" $(MAKE_ARGS)

build-tests:
	$(GNATMAKE) -p -Pdynamo_tests $(MAKE_ARGS)

bin/dynamo:  local-build
bin/dynamo_harness:  bin/dynamo build-tests

# Not intended for manual invocation.
# Invoked if automatic builds are enabled.
# Analyzes only on those sources that have changed.
# Does not build executables.
autobuild:
	$(GNATMAKE) $(MAKE_ARGS) -gnatc -c -k  -P "$(GPRPATH)"

# Clean the root project of all build products.
clean:
	-rm -rf lib obj bin

# Clean root project and all imported projects too.
clean_tree:
	$(GNATCLEAN) -q -P "$(GPRPATH)" -r

# Check *all* sources for errors, even those not changed.
# Does not build executables.
analyze:
	$(GNATMAKE) $(MAKE_ARGS) -f  -gnatc -c -k  -P "$(GPRPATH)"

# Clean, then build executables for all mains defined by the project.
rebuild: clean build

doc:
	$(DYNAMO) build-doc -markdown wiki

check test:	 build
	-rm -rf test-app
	-rm -f dynamo-junit.xml
	bin/dynamo_harness -xml dynamo-aunit.xml

GENERATOR=dynamo

generate:
	$(GENERATOR) generate config/db
	rm -f src/model/gen-database-model.adb

dist:
	git archive -o $(DIST_FILE) --prefix=$(distdir)/ HEAD

src/gen-configs.ads:   Makefile src/gen-configs.gpb
	gnatprep -DCONFIG_DIR='"$(config_dir)/base"' -DVERSION='"@GEN_VERSION@"' \
		  src/gen-configs.gpb src/gen-configs.ads

install:	  install_dirs
	$(INSTALL) bin/dynamo $(prefix)/bin/dynamo
	$(INSTALL) doc/dynamo.1 $(prefix)/share/man/man1/dynamo.1
	$(CP) config/*.properties $(prefix)/share/dynamo/base
	$(CP) config/*.xsl $(prefix)/share/dynamo/base
	-rm -rf $(prefix)/share/dynamo/base/templates
	-rm -rf $(prefix)/share/dynamo/base/commands
	-rm -rf $(prefix)/share/dynamo/base/mappings
	-rm -rf $(prefix)/share/dynamo/base/uml
	$(CP) -r config/uml $(prefix)/share/dynamo/base
	$(CP) -r config/mappings $(prefix)/share/dynamo/base
	$(CP) -r config/templates $(prefix)/share/dynamo/base
	$(CP) -r config/commands $(prefix)/share/dynamo/base
	$(CP) config/db/*.xml $(prefix)/share/dynamo/base/db

install_dirs:
	${MKDIR} -p ${bindir}
	${MKDIR} -p ${prefix}/share/dynamo/base
	${MKDIR} -p ${prefix}/share/dynamo/base/db
	${MKDIR} -p ${prefix}/share/dynamo/base/mappings
	${MKDIR} -p ${prefix}/share/dynamo/base/commands
	${MKDIR} -p ${prefix}/share/man/man1

uninstall:
	rm -rf ${prefix}/share/dynamo/base
	rm -f ${bindir}/dynamo
	rm -f $(prefix)/share/man/man1/dynamo.1

.PHONY: doc
