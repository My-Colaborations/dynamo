dnl Autoconf configure script for Dynamo
dnl Copyright (C) 2001, 2002, 2003, 2009, 2010, 2011, 2012 Stephane Carrez
dnl Written by Stephane Carrez (Stephane.Carrez@gmail.com)
dnl
dnl  Licensed under the Apache License, Version 2.0 (the "License");
dnl  you may not use this file except in compliance with the License.
dnl  You may obtain a copy of the License at
dnl
dnl     http://www.apache.org/licenses/LICENSE-2.0
dnl
dnl  Unless required by applicable law or agreed to in writing, software
dnl  distributed under the License is distributed on an "AS IS" BASIS,
dnl  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
dnl  See the License for the specific language governing permissions and
dnl  limitations under the License.
dnl 
dnl Process this file with autoconf to produce a configure script.

AC_INIT(src/gen.ads)

AC_CANONICAL_HOST
AC_EXEEXT

# Current release settings
GEN_MAJOR_VERSION=0
GEN_MINOR_VERSION=6
GEN_MICRO_VERSION=0
GEN_VERSION=$GEN_MAJOR_VERSION.$GEN_MINOR_VERSION.$GEN_MICRO_VERSION

# checking for local tools
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_LN_S

# Set the version number of Dynamo
AC_SUBST(GEN_VERSION)
AC_SUBST(GEN_MAJOR_VERSION)
AC_SUBST(GEN_MINOR_VERSION)
AC_SUBST(GEN_MICRO_VERSION)

EXEC_PREFIX="$prefix"
AC_SUBST(EXEC_PREFIX)

GEN_LIBDIR="lib"
AC_SUBST(GEN_LIBDIR)

##########################################
# Ada Util library
##########################################

AC_MSG_CHECKING([Ada Utility library (code.google.com/p/ada-util)])
AC_ARG_WITH(ada-util,
AS_HELP_STRING([--with-ada-util=x], [Path for the Ada Utility library (code.google.com/p/ada-util)]),
[
  UTIL_DIR=${withval}/
],
[
  echo "with \"util\"; project t is for Source_Dirs use (); end t;" > t.gpr
  gnatmake -p -Pt >/dev/null 2>/dev/null
  if test $? -eq 0; then
    UTIL_DIR=
  else
    UTIL_DIR=../util/
  fi;
  rm -f t.gpr
])
echo "with \"${UTIL_DIR}util\"; project t is for Source_Dirs use (); end t;" > t.gpr
gnatmake -p -Pt >/dev/null 2>/dev/null
if test $? -ne 0 ; then
   rm -f t.gpr
   AC_MSG_ERROR([Ada Utility library not found in ${UTIL_DIR}])
fi
rm -f t.gpr
AC_MSG_RESULT(${UTIL_DIR})
AC_SUBST(UTIL_DIR)

##########################################
# Ada Expression Language library
##########################################
AC_MSG_CHECKING([Ada Expression Language library (code.google.com/p/ada-el)])
AC_ARG_WITH(ada-el,
AS_HELP_STRING([--with-ada-el=x], [Path for the Ada Expression Language library (code.google.com/p/ada-el)]),
[
  EL_DIR=${withval}/
],
[
  echo "with \"el\"; project t is for Source_Dirs use (); end t;" > t.gpr
  gnatmake -p -Pt >/dev/null 2>/dev/null
  if test $? -eq 0; then
    EL_DIR=
  else
    EL_DIR=../el/
  fi;
  rm -f t.gpr
])
echo "with \"${EL_DIR}el\"; project t is for Source_Dirs use (); end t;" > t.gpr
gnatmake -p -Pt >/dev/null 2>/dev/null
if test $? -ne 0 ; then
   rm -f t.gpr
   AC_MSG_ERROR([Ada Expression Language library not found in ${EL_DIR}])
fi
rm -f t.gpr
AC_MSG_RESULT(${EL_DIR})
AC_SUBST(EL_DIR)

##########################################
# Ada Server Faces library
##########################################
AC_MSG_CHECKING([Ada Server Faces library (code.google.com/p/ada-asf)])
AC_ARG_WITH(ada-asf,
AS_HELP_STRING([--with-ada-asf=x], [Path for the Ada Server Faces library (code.google.com/p/ada-asf)]),
[
  ASF_DIR=${withval}/
],
[
  echo "with \"asf\"; project t is for Source_Dirs use (); end t;" > t.gpr
  gnatmake -p -Pt >/dev/null 2>/dev/null
  if test $? -eq 0; then
    ASF_DIR=
  else
    ASF_DIR=../asf/
  fi;
  rm -f t.gpr
])
echo "with \"${ASF_DIR}asf\"; project t is for Source_Dirs use (); end t;" > t.gpr
gnatmake -p -Pt >/dev/null 2>/dev/null
if test $? -ne 0 ; then
   rm -f t.gpr
   AC_MSG_ERROR([Ada Server Faces library not found in ${ASF_DIR}])
fi
rm -f t.gpr
AC_MSG_RESULT(${ASF_DIR})
AC_SUBST(ASF_DIR)

##########################################
# Ada Database Objects library
##########################################
AC_MSG_CHECKING([Ada Database Objects library (code.google.com/p/ada-ado)])
AC_ARG_WITH(ada-ado,
AS_HELP_STRING([--with-ada-ado=x], [Path for the Ada Database Objects library (code.google.com/p/ada-ado)]),
[
  ADO_DIR=${withval}/
],
[
  echo "with \"ado\"; project t is for Source_Dirs use (); end t;" > t.gpr
  gnatmake -p -Pt >/dev/null 2>/dev/null
  if test $? -eq 0; then
    ADO_DIR=
  else
    ADO_DIR=../ado/
  fi;
  rm -f t.gpr
])
echo "with \"${ADO_DIR}ado\"; project t is for Source_Dirs use (); end t;" > t.gpr
gnatmake -p -Pt >/dev/null 2>/dev/null
if test $? -ne 0 ; then
   rm -f t.gpr
   AC_MSG_ERROR([Ada Database Objects library not found in ${ADO_DIR}])
fi
rm -f t.gpr
AC_MSG_RESULT(${ADO_DIR})
AC_SUBST(ADO_DIR)

AC_SUBST(mkdir_p)

AC_CONFIG_FILES([Makefile])
AC_OUTPUT(
dynamo.gpr
tests.gpr
)
